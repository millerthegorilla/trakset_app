volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_django_media: {}

  production_redis_data: {}

networks:
  asset_network:
    name: asset_network
  swag_network:
    name: swag_network
  default:
    name: asset_network

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: trakset_app_production_django
    volumes:
      - production_django_media:/app/trakset_app/media
    networks:
      - asset_network
      - swag_network

    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: trakset_app_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: docker.io/redis:6

    volumes:
      - production_redis_data:/data


  celeryworker:
    <<: *django
    image: trakset_app_production_celeryworker
    command: /start-celeryworker
    networks:
       asset_network:

  celerybeat:
    <<: *django
    image: trakset_app_production_celerybeat
    command: /start-celerybeat
    networks:
      asset_network:

  flower:
    <<: *django
    image: trakset_app_production_flower
    command: /start-flower
    networks:
      asset_network:

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: trakset_app_production_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
    networks:
      asset_network:
